**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public void reorderList(ListNode head) {
       //Find miidle of a list using fast and aslow
       ListNode fast = head;
       ListNode slow = head;

       while(fast!=null && fast.next!=null){
           fast = fast.next.next;
           slow  =slow.next;
       }

       // divede and Reverse the second half
       ListNode second = slow.next;
       ListNode prev = slow.next = null;
       while(second!=null){
         ListNode temp = second.next;
         second.next = prev ;
          prev = second;
          second = temp;
       }

       //connect

       ListNode first = head;
       second = prev;
       while(second!=null){
           ListNode temp1 = first.next;
           ListNode temp2 = second.next;
           
           first.next = second;
           second.next = temp1;
           first = temp1;
           second = temp2;   
       }    
    }
}
